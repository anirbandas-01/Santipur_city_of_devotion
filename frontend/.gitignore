# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?




import { useState, useEffect } from 'react';
import { Menu, X, User, ChevronDown } from "lucide-react";
import { Link } from "react-router-dom";

const Navbar = ({ scrollToSection, sidebarOpen , toggleSidebar }) => {
  //const [isOpen, setIsOpen] = useState(false)
  const [scrolled, setScrolled] = useState(false);
  
  const [ menuOpen, setMenuOpen ] = useState(false);
  const [user, setUser] = useState(null);

  //navbar style on scroll
  useEffect(() => {
    const handleScroll = () => {
      const offset = window.scrollY
      setScrolled(offset > 100)
    }

    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

 
  
  // simulate login check (later, replace with token logic)
  useEffect(() => {
    const savedUser = localStorage.getItem("user");
    if (savedUser) setUser(JSON.parse(savedUser));
  }, []);

  /* const handleNavClick = (href) => {
    const sectionId = href.substring(1);
    scrollToSection(sectionId);
  }; */

  const handleLogout = () => {
    localStorage.removeItem("user");
    localStorage.removeItem("token");
    setUser(null);
  };
  
  

  const navItems = [
    { href: '#home', label: 'Home' },
    { href: '#slideshow', label: 'Slides' },
    { href: '#history', label: 'History' },
    { href: '#culture', label: 'Culture' },
    { href: '#sarees', label: 'Sarees' },
    { href: '#devotion', label: 'Devotion' }
  ]

    //handle click and smooth scroll
  const handleNavClick = (href) => {
    const sectionId = href.substring(1)
    scrollToSection(sectionId)
  };

  return (
    <nav className={`fixed w-full top-0 z-40 transition-all duration-300 ${
 scrolled ? 'bg-white/95 backdrop-blur-md shadow-lg' 
            : 'bg-white/90 backdrop-blur-md shadow-lg'
 }`}>
  <div className="w-full mx-auto px-8 py-4 flex items-center justify-between">
    
    {/* Left side: Menu Button + Logo together */}
    <div className="flex items-center space-x-6">
      <button
        onClick={(e) => {
          e.preventDefault();
          toggleSidebar();
        }}
        className="p-2 rounded-lg hover:bg-gray-100 transition-colors"
      >
        <Menu size={28} />
      </button>

      <div className="flex items-center space-x-3">
        <div className="w-10 h-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center">
          <span className="text-white font-bold text-lg">S</span>
        </div>
        <h1 className="text-2xl font-bold font-serif text-gray-800">Santipur</h1>
      </div>
    </div>

    {/* Right side: Desktop Navigation + Profile together */}
    <div className="flex items-center space-x-6">
      {/* Desktop Navigation Menu */}
      <div className="hidden md:flex space-x-6">
        {navItems.map((item) => (
          <button
            key={item.href}
            onClick={() => handleNavClick(item.href)}
            className="text-gray-600 hover:text-blue-600 transition-colors duration-300 font-medium"
          >
            {item.label}
          </button>
        ))}
      </div>

      {/* Profile Icon */}
      <div className="relative">
        <button
          className="flex items-center space-x-2 focus:outline-none"
          onClick={() => setMenuOpen(!menuOpen)}
        >
          {user ? (
            <div className="w-10 h-10 rounded-full bg-blue-600 text-white flex items-center justify-center text-lg font-bold">
              {user.name.charAt(0).toUpperCase()}
            </div>
          ) : (
            <div className="w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center">
              <User size={22} className="text-gray-600" />
            </div>
          )}
          <ChevronDown size={18} className="text-gray-500" />
        </button>

        {menuOpen && (
          <div className="absolute right-0 mt-3 w-48 bg-white shadow-lg rounded-lg border border-gray-100 py-2">
            {!user ? (
              <>
                  <Link
                      to="/signup"
                      className="block px-4 py-2 text-gray-700 hover:bg-gray-100"
                    >
                      Club Signup
                    </Link>
                 <Link
                      to="/login"
                      className="block px-4 py-2 text-gray-700 hover:bg-gray-100"
                    >
                      Club Login
                    </Link>
              </>
            ) : (
              <>
                <Link
                      to="/profile"
                      className="block px-4 py-2 text-gray-700 hover:bg-gray-100"
                    >
                      My Profile
                    </Link>
                <button
                  onClick={handleLogout}
                  className="w-full text-left px-4 py-2 text-gray-700 hover:bg-gray-100"
                >
                  Logout
                </button>
              </>
            )}
          </div>
        )}
      </div>
    </div>
  </div>
</nav>
  );
};

export default Navbar;

